递归的三大要素：

1.有一个待递归的函数，需明确函数到底是干嘛的。
PS.著名的斐波那契数列，1、1、2、3、5......，每个数等于前面两个数相加之和，即第n个项目的f(n) = f(n-1) + f(n-2)

2.寻找递归结束的条件，切记一定要有此模块，不然会一直调用函数，陷入死循环。
PS.第一个数和第二个数是1

3.找出函数的等价关系式，即缩小参数的范围，比如从100到1这种，此模块是递归函数最难的部分
PS.f(n) = f(n-1) + f(n-2)

https://www.zhihu.com/question/31412436


https://leetcode-cn.com/problems/swap-nodes-in-pairs/
题目主要考察，链表中的有超过2个以上的值的时，需要两两交换相邻两个节点，可考虑通过递归的方式实现

class Solution:
    def swapPairs(self, head: ListNode) -> ListNode:

        # 单链表为空或单链表只有一个节点，则直接返回头结点
        if not head or not head.next:
            return head

        # 给第一个节点和第二个节点分别赋值
        first_node = head
        second_node = head.next

        # 交互两个节点的值
        first_node.next  = self.swapPairs(second_node.next)
        second_node.next = first_node

        return second_node
