https://leetcode-cn.com/problems/add-two-numbers/

分析题目：
长度较短的链表在末尾补零使得两个链表长度相等，再一个一个元素对齐相加(需考虑进位)
1.获得两个链表所对应的长度
2.在较短的链表末尾补零
3.对齐相加考虑进位

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        """
        1.获得两个链表所对应的长度
        2.在较短的链表末尾补零
        3.对齐相加考虑进位  
        """

        # 1.获得两个链表的长度
        def lenList(self,head):
            len_List = 0

            if head == None or head.next == None:
                len_List = 1

            else:
                while head.next:
                    len_List +=1
                    head = head.next

            return len_List

        # 2.较短的链表末尾补零
        if lenList(l1) > lenList(l2):
            temp = lenList(l1) - lenList(l2)

            while temp:
                l2.tail.next = 0
                temp -= 1

        elif(lenList(l1) == lenList(l2)):
            pass

        else:
            temp = lenList(l2) - lenList(l1)

            while temp:
                l1.tail.next = 0
                temp -= 1

       # 3.对齐相加考虑进位的问题
       start = ListNode(None)
       temp = 0

       while lenList(l1):
           temp_result = l1.val + l2.val + temp
           if temp_result >= 10:
               temp_result = temp_result - 10
               temp = 1
            else:
                start.val = temp_result
                temp = 0
            l1 = l1.next
            l2 = l2.next
            lenList(l1) -= 1
        return start.next
        

